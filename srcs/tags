!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
erase_input	ft_print_info.c	/^int	erase_input(t_arg **new)$/;"	f
fillup_cursor_position	get_cursor_position.c	/^static int fillup_cursor_position(int *x, int *y, struct termios saved, int fd)$/;"	f	file:
fillup_cursor_position	tmp.c	/^static int fillup_cursor_position(int *x, int *y, struct termios saved, int fd)$/;"	f	file:
ft_add_alias	tofind.c	/^void	ft_add_alias(char **alias_name, char **alias_value, char **new_values)$/;"	f
ft_add_command_to_path	find_path.c	/^static char		**ft_add_command_to_path(char **possible_path, char *arg)$/;"	f	file:
ft_add_command_to_path	tofind.c	/^static char		**ft_add_command_to_path(char **possible_path, char *arg)$/;"	f	file:
ft_add_env_var	ft_set_env.c	/^static char		*ft_add_env_var(char *env_location, char *new_env)$/;"	f	file:
ft_add_env_var	tofind.c	/^static char		*ft_add_env_var(char *env_location, char *new_env)$/;"	f	file:
ft_advance_lst_to	ft_lst_operations.c	/^void	ft_advance_lst_to(t_arg *first, t_arg *new, t_arg **to_find, int forwrd)$/;"	f
ft_advance_lst_to	tofind.c	/^void	ft_advance_lst_to(t_arg *first, t_arg *new, t_arg **to_find, int forwrd)$/;"	f
ft_advance_string_for_quote	ft_advance_string_for_quote.c	/^char	*ft_advance_string_for_quote(char *str)$/;"	f
ft_advance_string_for_quote	tofind.c	/^char	*ft_advance_string_for_quote(char *str)$/;"	f
ft_call_to_chdir	ft_change_dir.c	/^void	ft_call_to_chdir(char *str)$/;"	f
ft_call_to_chdir	tofind.c	/^void	ft_call_to_chdir(char *str)$/;"	f
ft_change_dir	ft_change_dir.c	/^void	ft_change_dir(char *str)$/;"	f
ft_change_dir	tofind.c	/^void	ft_change_dir(char *str)$/;"	f
ft_check_commas	ft_check_commas.c	/^int		ft_check_commas(char *str)$/;"	f
ft_check_commas	tofind.c	/^int		ft_check_commas(char *str)$/;"	f
ft_check_input_for_ctrl_keys	tofind.c	/^int			ft_check_input_for_ctrl_keys(t_arg **new, int buf, t_arg *first)$/;"	f
ft_check_key_down	tofind.c	/^static void	ft_check_key_down(t_arg *first, t_arg *new)$/;"	f	file:
ft_check_key_left	tofind.c	/^static void	ft_check_key_left(t_arg **new)$/;"	f	file:
ft_check_key_right	tofind.c	/^static void	ft_check_key_right(t_arg **new)$/;"	f	file:
ft_check_key_up	tofind.c	/^static void	ft_check_key_up(t_arg *first, t_arg *new)$/;"	f	file:
ft_check_special_input	tofind.c	/^int	ft_check_special_input(t_arg **new, int buf, t_arg **first_arg)$/;"	f
ft_compare_string_to_win	tofind.c	/^static int	ft_compare_string_to_win(char *path, char *git, t_arg *line_info)$/;"	f	file:
ft_complete_command	ft_complete_command.c	/^void	ft_complete_command(int quote_type, char **command_line, t_arg **first)$/;"	f
ft_complete_command	tofind.c	/^void	ft_complete_command(int quote_type, char **command_line, t_arg **first)$/;"	f
ft_creat_alias	tofind.c	/^void	ft_creat_alias(char **alias_name, char **alias_value, char **new_values)$/;"	f
ft_define_cmp	ft_lst_operations.c	/^static char	*ft_define_cmp(t_arg *tmp, t_arg *new)$/;"	f	file:
ft_define_cmp	tofind.c	/^static char	*ft_define_cmp(t_arg *tmp, t_arg *new)$/;"	f	file:
ft_define_cmp_size	ft_lst_operations.c	/^static int	ft_define_cmp_size(t_arg *tmp, t_arg *new)$/;"	f	file:
ft_define_cmp_size	tofind.c	/^static int	ft_define_cmp_size(t_arg *tmp, t_arg *new)$/;"	f	file:
ft_del_one	ft_complete_command.c	/^char	*ft_del_one(char *command_line, int write_from)$/;"	f
ft_del_one	tofind.c	/^char	*ft_del_one(char *command_line, int write_from)$/;"	f
ft_del_one_environ_var	ft_unsetenv.c	/^static void		ft_del_one_environ_var(char *str)$/;"	f	file:
ft_del_one_environ_var	tofind.c	/^static void		ft_del_one_environ_var(char *str)$/;"	f	file:
ft_delete	tofind.c	/^void	ft_delete(char **alias_name, char **alias_value)$/;"	f
ft_echo	ft_echo.c	/^void	ft_echo(char **str)$/;"	f
ft_echo	tofind.c	/^void	ft_echo(char **str)$/;"	f
ft_env	ft_env.c	/^void			ft_env(char **args, t_arg **first)$/;"	f
ft_env	tofind.c	/^void			ft_env(char **args, t_arg **first)$/;"	f
ft_env_options	ft_env.c	/^static void		ft_env_options(char **args, t_arg **first)$/;"	f	file:
ft_env_options	tofind.c	/^static void		ft_env_options(char **args, t_arg **first)$/;"	f	file:
ft_ex_myprog_or_exit	tofind.c	/^void	ft_ex_myprog_or_exit(char **arguments,$/;"	f
ft_file_to_string	ft_read_input.c	/^int		ft_file_to_string(t_arg *first)$/;"	f
ft_file_to_string	tofind.c	/^void		ft_file_to_string(void)$/;"	f
ft_find_prog_path	find_path.c	/^char			**ft_find_prog_path(char *arg, char **environ)$/;"	f
ft_find_prog_path	tofind.c	/^char			**ft_find_prog_path(char *arg, char **environ)$/;"	f
ft_get_git	ft_location_info.c	/^static char		*ft_get_git(void)$/;"	f	file:
ft_get_git	tofind.c	/^static char		*ft_get_git(void)$/;"	f	file:
ft_get_location_info	ft_location_info.c	/^void			ft_get_location_info(char **path, char **git)$/;"	f
ft_get_location_info	tofind.c	/^void			ft_get_location_info(char **path, char **git)$/;"	f
ft_go_to_home	ft_change_dir.c	/^void	ft_go_to_home(void)$/;"	f
ft_go_to_home	tofind.c	/^void	ft_go_to_home(void)$/;"	f
ft_join_print	ft_complete_command.c	/^char	*ft_join_print(char *command_line, int buf, int write_from)$/;"	f
ft_join_print	tofind.c	/^char	*ft_join_print(char *command_line, int buf, int write_from)$/;"	f
ft_launch_builtin_processes	ft_launch_processes.c	/^static void	ft_launch_builtin_processes(int command_number,$/;"	f	file:
ft_launch_builtin_processes	tofind.c	/^static void	ft_launch_builtin_processes(int command_number, char **arguments, t_arg **first)$/;"	f	file:
ft_launch_ext_command	ft_launch_processes.c	/^static void	ft_launch_ext_command(char **arguments, char **environ)$/;"	f	file:
ft_launch_ext_command	tofind.c	/^static void	ft_launch_ext_command(char **arguments)$/;"	f	file:
ft_launch_forkk	ft_env.c	/^static void		ft_launch_forkk(t_arg **first, char **args, char **environ)$/;"	f	file:
ft_launch_forkk	tofind.c	/^static void		ft_launch_forkk(t_arg **first, char **args)$/;"	f	file:
ft_launch_processes	ft_launch_processes.c	/^void		ft_launch_processes(char **arguments, t_arg **first, char **new_env)$/;"	f
ft_launch_processes	tofind.c	/^void		ft_launch_processes(char **arguments, t_arg **first)$/;"	f
ft_listdel	ft_lst_operations.c	/^void	ft_listdel(t_arg **first)$/;"	f
ft_listdel	tofind.c	/^void	ft_listdel(t_arg **first)$/;"	f
ft_look_inside	ft_launch_processes.c	/^int		ft_look_inside(char *line, t_arg **first)$/;"	f
ft_look_inside	tofind.c	/^int		ft_look_inside(char *line, t_arg **first)$/;"	f
ft_new_alias	tofind.c	/^void	ft_new_alias(char **new_values)$/;"	f
ft_new_environ_size	ft_set_env.c	/^int				ft_new_environ_size(char **args, char **environ_tocpy)$/;"	f
ft_new_environ_size	tofind.c	/^int				ft_new_environ_size(char **args, char **environ_tocpy)$/;"	f
ft_parse	ft_echo.c	/^void	ft_parse(char **str)$/;"	f
ft_parse	tofind.c	/^void	ft_parse(char **str)$/;"	f
ft_pathlen	ft_set_env.c	/^static size_t	ft_pathlen(char *str)$/;"	f	file:
ft_pathlen	tofind.c	/^static size_t	ft_pathlen(char *str)$/;"	f	file:
ft_place_element_in_tern_tree	ft_store.c	/^static	void	ft_place_element_in_tern_tree(t_arg **first, t_arg *new)$/;"	f	file:
ft_place_element_in_tern_tree	tofind.c	/^static	void	ft_place_element_in_tern_tree(t_arg **first, t_arg *new)$/;"	f	file:
ft_print_after_break	tofind.c	/^static void ft_print_after_break(t_arg *line_info, int arg_len)$/;"	f	file:
ft_print_corresponding_variable	ft_echo.c	/^void	ft_print_corresponding_variable(char *str)$/;"	f
ft_print_corresponding_variable	tofind.c	/^void	ft_print_corresponding_variable(char *str)$/;"	f
ft_print_current_directorg_y	ft_print_info.c	/^void ft_print_current_directorg_y(void)$/;"	f
ft_print_current_directory	tofind.c	/^static void ft_print_current_directory(char *path, char *git)$/;"	f	file:
ft_put_alias_errors	tofind.c	/^int		ft_put_alias_errors(char **str)$/;"	f
ft_put_command_errors	ft_print_errors.c	/^void	ft_put_command_errors(char *str)$/;"	f
ft_put_command_errors	tofind.c	/^void	ft_put_command_errors(char *str)$/;"	f
ft_put_env	ft_put_env.c	/^void	ft_put_env(void)$/;"	f
ft_put_env	tofind.c	/^void	ft_put_env(void)$/;"	f
ft_putchar_terminal	ft_print_info.c	/^int	ft_putchar_terminal(char c)$/;"	f
ft_recognize_builtin_command	builtin_commands.c	/^int		ft_recognize_builtin_command(char *str)$/;"	f
ft_recognize_builtin_command	tofind.c	/^int		ft_recognize_builtin_command(char *str)$/;"	f
ft_recognize_processes	ft_launch_processes.c	/^void	ft_recognize_processes(char *str, t_arg **first)$/;"	f
ft_recognize_processes	tofind.c	/^void	ft_recognize_processes(char *str, t_arg **first)$/;"	f
ft_replace_content	tofind.c	/^void	ft_replace_content(t_arg *line_info, int put)$/;"	f
ft_replace_old_line	ft_read_input.c	/^void	ft_replace_old_line(t_arg *new)$/;"	f
ft_replace_old_line	tofind.c	/^void	ft_replace_old_line(t_arg *new)$/;"	f
ft_return_alias_errors	tofind.c	/^static int 	ft_return_alias_errors(int i, int underscore_nbr)$/;"	f	file:
ft_setenv	ft_set_env.c	/^char			**ft_setenv(char **args, int new_environ_size,$/;"	f
ft_setenv	tofind.c	/^char			**ft_setenv(char **args, int new_environ_size,$/;"	f
ft_sort_git_name	ft_location_info.c	/^char			*ft_sort_git_name(DIR *dir, char *buf)$/;"	f
ft_sort_git_name	tofind.c	/^char			*ft_sort_git_name(DIR *dir, char *buf)$/;"	f
ft_sort_setenv	ft_set_env.c	/^void			ft_sort_setenv(char **args)$/;"	f
ft_sort_setenv	tofind.c	/^void			ft_sort_setenv(char **args)$/;"	f
ft_standby	ft_complete_command.c	/^void	ft_standby(void)$/;"	f
ft_standby	tofind.c	/^void	ft_standby(void)$/;"	f
ft_store_args	ft_store.c	/^t_arg			*ft_store_args(t_arg *first, t_arg *new_arg)$/;"	f
ft_store_args	tofind.c	/^t_arg			*ft_store_args(t_arg *first, t_arg *new_arg)$/;"	f
ft_store_command_historic	ft_store.c	/^	t_arg	*ft_store_command_historic(t_arg *first)$/;"	f
ft_store_command_historic	tofind.c	/^static	t_arg	*ft_store_command_historic(t_arg *first)$/;"	f	file:
ft_unsetenv	ft_unsetenv.c	/^void			ft_unsetenv(char **str)$/;"	f
ft_unsetenv	tofind.c	/^void			ft_unsetenv(char **str)$/;"	f
g_commands	builtin_commands.c	/^static char *g_commands[9] = {"echo", "cd", "setenv", "unsetenv", "env",$/;"	v	file:
g_commands	tofind.c	/^static char *g_commands[9] = {"echo", "cd", "setenv", "unsetenv", "env",$/;"	v	file:
g_print_size	ft_location_info.c	/^static int g_print_size;$/;"	v	file:
g_print_size	tofind.c	/^static int g_print_size;$/;"	v	file:
g_to_find	operate_special_input.c	/^static	t_arg	*g_to_find = NULL;$/;"	v	file:
g_to_find	tofind.c	/^static	t_arg	*g_to_find = NULL;$/;"	v	file:
g_x	ft_print_info.c	/^static int g_x = 0;$/;"	v	file:
g_y	ft_print_info.c	/^static int g_y = 0;$/;"	v	file:
get_cursor_position	get_cursor_position.c	/^int		get_cursor_position(int *x, int *y)$/;"	f
get_cursor_position	tmp.c	/^int		get_cursor_position(int *x, int *y)$/;"	f
get_file_descriptor	ft_read_input.c	/^static int get_file_descriptor(void)$/;"	f	file:
get_last_part	ft_location_info.c	/^static	char	*get_last_part(char *tmp)$/;"	f	file:
get_last_part	tofind.c	/^static	char	*get_last_part(char *tmp)$/;"	f	file:
get_terminal_description	ft_get_terminfo.c	/^int	get_terminal_description(void)$/;"	f
main	main.c	/^int		main(void)$/;"	f
main	tofind.c	/^int		main(void)$/;"	f
new_arg	ft_lst_operations.c	/^t_arg	*new_arg(void)$/;"	f
new_arg	tofind.c	/^t_arg	*new_arg(void)$/;"	f
operate_cr	operate_special_input.c	/^static void	operate_cr(t_arg **new, t_arg **first)$/;"	f	file:
operate_special_input	operate_special_input.c	/^int			operate_special_input(t_arg **new, char *buf, t_arg **first)$/;"	f
put_error	ft_print_errors.c	/^void	put_error(char *str)$/;"	f
put_fatal_error	ft_print_errors.c	/^int		put_fatal_error(char *str)$/;"	f
read_cursor	get_cursor_position.c	/^static int 		read_cursor(int fd)$/;"	f	file:
read_cursor	tmp.c	/^static int 		read_cursor(int fd)$/;"	f	file:
reset_terminal	get_cursor_position.c	/^static int reset_terminal(struct termios *saved, char *error_message, int fd)$/;"	f	file:
reset_terminal	tmp.c	/^static int reset_terminal(struct termios *saved, char *error_message, int fd)$/;"	f	file:
set_non_canonical_input	main.c	/^static int	set_non_canonical_input(void)$/;"	f	file:
set_non_canonical_input	tofind.c	/^static int	set_non_canonical_input(void)$/;"	f	file:
set_pwd_var	ft_location_info.c	/^static int		set_pwd_var(void)$/;"	f	file:
set_pwd_var	tofind.c	/^static int		set_pwd_var(void)$/;"	f	file:
set_terminal	get_cursor_position.c	/^static	int set_terminal(struct termios *saved, int fd)$/;"	f	file:
set_terminal	tmp.c	/^static	int set_terminal(struct termios *saved, int fd)$/;"	f	file:
window_info	print_info2.c	/^int window_info(int info_request)$/;"	f
