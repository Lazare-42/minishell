!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ARCH	libft/Makefile	/^ARCH = ar rc$/;"	m
BUFF_SIZE	includes/minishell.h	/^# define BUFF_SIZE /;"	d
BUFF_SIZE	libft/include/get_next_line.h	/^# define BUFF_SIZE /;"	d
CC	Makefile	/^CC = clang$/;"	m
CC	libft/Makefile	/^CC = gcc -Wall -Wextra -Werror -c $/;"	m
CDEBUG	Makefile	/^CDEBUG = -fno-omit-frame-pointer -fsanitize=address -g$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Wextra -Werror$/;"	m
CLEAN	libft/Makefile	/^CLEAN = \/bin\/rm -f$/;"	m
GET_NEXT_LINE_H	libft/include/get_next_line.h	/^# define GET_NEXT_LINE_H$/;"	d
INCDIR	Makefile	/^INCDIR = includes$/;"	m
KEY_DOWN	includes/minishell.h	/^# define KEY_DOWN /;"	d
KEY_LEFT	includes/minishell.h	/^# define KEY_LEFT /;"	d
KEY_RIGHT	includes/minishell.h	/^# define KEY_RIGHT /;"	d
KEY_UP	includes/minishell.h	/^# define KEY_UP /;"	d
LDFLAGS	Makefile	/^LDFLAGS = -L$(LIBDIR) -lft$/;"	m
LIBDIR	Makefile	/^LIBDIR = libft$/;"	m
LIBFT_H	libft/include/libft.h	/^# define LIBFT_H$/;"	d
LNCURSES	Makefile	/^LNCURSES = -lncurses$/;"	m
MINISHELL_H	includes/minishell.h	/^# define MINISHELL_H$/;"	d
NAME	Makefile	/^NAME = minishell$/;"	m
NAME	libft/Makefile	/^NAME = libft.a$/;"	m
OBJECT	libft/Makefile	/^OBJECT = $(SRC:.c=.o)$/;"	m
OBJS	Makefile	/^OBJS = $(addprefix $(ODIR)\/, $(SOURCES:.c=.o))$/;"	m
ODIR	Makefile	/^ODIR = bin$/;"	m
OK	Makefile	/^OK = echo "[32m OK âœ“ [0m"$/;"	m
SDIR	Makefile	/^SDIR = srcs$/;"	m
SOURCES	Makefile	/^SOURCES = .\/builtin_commands.c \\$/;"	m
SRC	libft/Makefile	/^SRC = ft_atoi.c \\$/;"	m
SRCS	Makefile	/^SRCS = $(addprefix $(SDIR)\/, $(SOURCES:.c=.c))$/;"	m
arg	includes/minishell.h	/^	char			*arg;$/;"	m	struct:s_arg
content	libft/include/libft.h	/^	void			*content;$/;"	m	struct:s_list
content_size	libft/include/libft.h	/^	size_t			content_size;$/;"	m	struct:s_list
count_letters	libft/ft_split_char.c	/^static int		count_letters(char *str, int i, char c)$/;"	f	file:
count_letters	libft/ft_split_whitespaces.c	/^static int		count_letters(char *str, int i)$/;"	f	file:
count_letters	libft/ft_split_whitespaces_nokots.c	/^static int		count_letters(char *str, int i)$/;"	f	file:
count_words	libft/ft_split_char.c	/^static int		count_words(char *str, char c)$/;"	f	file:
count_words	libft/ft_split_whitespaces.c	/^static int		count_words(char *str)$/;"	f	file:
count_words	libft/ft_split_whitespaces_nokots.c	/^static int		count_words(char *str)$/;"	f	file:
create_tab	libft/ft_split_char.c	/^static char		**create_tab(char **tab, char *str, char c)$/;"	f	file:
create_tab	libft/ft_split_whitespaces.c	/^static char		**create_tab(char **tab, char *str)$/;"	f	file:
create_tab	libft/ft_split_whitespaces_nokots.c	/^static char		**create_tab(char **tab, char *str)$/;"	f	file:
fd	libft/include/get_next_line.h	/^	int				fd;$/;"	m	struct:s_gnl
ft_add_alias	srcs/ft_new_alias.c	/^void	ft_add_alias(char **alias_name, char **alias_value, char **new_values)$/;"	f
ft_add_command_to_path	srcs/find_path.c	/^static char		**ft_add_command_to_path(char **possible_path, char *arg)$/;"	f	file:
ft_add_env_var	srcs/ft_set_env.c	/^static char		*ft_add_env_var(char *env_location, char *new_env)$/;"	f	file:
ft_advance_lst_to	srcs/ft_lst_operations.c	/^void	ft_advance_lst_to(t_arg *first, t_arg *new, t_arg **to_find)$/;"	f
ft_advance_str_for_quotes	libft/ft_advance_for_quotes.c	/^int		ft_advance_str_for_quotes(char *str, int i)$/;"	f
ft_advance_string_for_quote	srcs/ft_advance_string_for_quote.c	/^char	*ft_advance_string_for_quote(char *str)$/;"	f
ft_atoi	libft/ft_atoi.c	/^int	ft_atoi(const char *nptr)$/;"	f
ft_bzero	libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/;"	f
ft_call_to_chdir	srcs/ft_change_dir.c	/^void	ft_call_to_chdir(char *str, char *arg)$/;"	f
ft_change_dir	srcs/ft_change_dir.c	/^int		ft_change_dir(char *str)$/;"	f
ft_check_commas	main.c	/^int ft_check_commas(char *str)$/;"	f
ft_check_commas	srcs/main.c	/^int		ft_check_commas(char *str)$/;"	f
ft_check_input_for_ctrl_keys	srcs/ft_check_input_for_ctrl_keys.c	/^int			ft_check_input_for_ctrl_keys(t_arg **new, int buf, t_arg *first)$/;"	f
ft_check_key_down	srcs/ft_check_input_for_ctrl_keys.c	/^static void	ft_check_key_down(t_arg *first, t_arg **new)$/;"	f	file:
ft_check_key_left	srcs/ft_check_input_for_ctrl_keys.c	/^static void	ft_check_key_left(t_arg **new)$/;"	f	file:
ft_check_key_right	srcs/ft_check_input_for_ctrl_keys.c	/^static void	ft_check_key_right(t_arg **new)$/;"	f	file:
ft_check_key_up	srcs/ft_check_input_for_ctrl_keys.c	/^static void	ft_check_key_up(t_arg *first, t_arg *new)$/;"	f	file:
ft_check_special_input	srcs/ft_check_input_for_ctrl_keys.c	/^int	ft_check_special_input(t_arg **new, int buf, t_arg **first_arg)$/;"	f
ft_compare_string_to_win	srcs/ft_print_info.c	/^static int	ft_compare_string_to_win(char *path, char *git, t_arg *line_info)$/;"	f	file:
ft_complete_command	srcs/ft_complete_command.c	/^void	ft_complete_command(int quote_type, char **command_line)$/;"	f
ft_count_tab	libft/ft_strsplit.c	/^static char	**ft_count_tab(char const *s, char c)$/;"	f	file:
ft_creat_alias	srcs/ft_new_alias.c	/^void	ft_creat_alias(char **alias_name, char **alias_value, char **new_values)$/;"	f
ft_del_one	srcs/ft_complete_command.c	/^char	*ft_del_one(char *command_line, int write_from)$/;"	f
ft_del_one_environ_var	srcs/ft_unsetenv.c	/^static void		ft_del_one_environ_var(char *str)$/;"	f	file:
ft_delete	srcs/ft_new_alias.c	/^void	ft_delete(char **alias_name, char **alias_value)$/;"	f
ft_echo	ft_echo.c	/^void	ft_echo(char **str)$/;"	f
ft_echo	srcs/ft_echo.c	/^void	ft_echo(char **str)$/;"	f
ft_env	srcs/ft_env.c	/^void			ft_env(char **args)$/;"	f
ft_env_options	srcs/ft_env.c	/^static void		ft_env_options(char **args)$/;"	f	file:
ft_ex_myprog_or_exit	srcs/ft_launch_processes.c	/^static void	ft_ex_myprog_or_exit(char *my_prog_path, char **arguments,$/;"	f	file:
ft_file_to_string	srcs/ft_read_input.c	/^void		ft_file_to_string(void)$/;"	f
ft_fillup	libft/get_next_line.c	/^int		ft_fillup(char **line, t_gnl **stock, char tofind)$/;"	f
ft_find_my_prog_path	find_path.c	/^char	*ft_find_my_prog_path(char *arg)$/;"	f
ft_find_my_prog_path	srcs/find_path.c	/^char			*ft_find_my_prog_path(char *arg)$/;"	f
ft_find_prog_path	srcs/find_path.c	/^char			**ft_find_prog_path(char *arg)$/;"	f
ft_freetables	libft/ft_freetables.c	/^void	ft_freetables(char **str)$/;"	f
ft_get_git	srcs/ft_location_info.c	/^static char		*ft_get_git(void)$/;"	f	file:
ft_get_location_info	srcs/ft_location_info.c	/^void			ft_get_location_info(char **path, char **git)$/;"	f
ft_int_size	libft/ft_int_size.c	/^int	ft_int_size(int nbr)$/;"	f
ft_isalnum	libft/ft_isalnum.c	/^int		ft_isalnum(int c)$/;"	f
ft_isalpha	libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/;"	f
ft_isascii	libft/ft_isascii.c	/^int		ft_isascii(int c)$/;"	f
ft_isdigit	libft/ft_isdigit.c	/^int		ft_isdigit(int c)$/;"	f
ft_isprint	libft/ft_isprint.c	/^int		ft_isprint(int c)$/;"	f
ft_itoa	libft/ft_itoa.c	/^char			*ft_itoa(int nbr)$/;"	f
ft_join_print	srcs/ft_complete_command.c	/^char	*ft_join_print(char *command_line, int buf, int write_from)$/;"	f
ft_launch_builtin_processes	srcs/ft_launch_processes.c	/^static void	ft_launch_builtin_processes(int command_number, char **arguments)$/;"	f	file:
ft_launch_ext_command	srcs/ft_launch_processes.c	/^static void	ft_launch_ext_command(char **arguments, char **environ_to_use)$/;"	f	file:
ft_launch_forkk	srcs/ft_env.c	/^static void		ft_launch_forkk(char **new_environ, char **args)$/;"	f	file:
ft_launch_processes	srcs/ft_launch_processes.c	/^void		ft_launch_processes(char **arguments, char **environ_to_use)$/;"	f
ft_look_inside	main.c	/^int		ft_look_inside(char *line)$/;"	f
ft_look_inside	srcs/main.c	/^int		ft_look_inside(char *line)$/;"	f
ft_lstadd	libft/ft_lstadd.c	/^void	ft_lstadd(t_list **alst, t_list *new)$/;"	f
ft_lstdel	libft/ft_lstdel.c	/^void	ft_lstdel(t_list **alst, void (*del)(void *, size_t))$/;"	f
ft_lstdelone	libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list **alst, void (*del)(void*, size_t))$/;"	f
ft_lstiter	libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(t_list *elem))$/;"	f
ft_lstmap	libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, t_list *(*f)(t_list *elem))$/;"	f
ft_lstnew	libft/ft_lstnew.c	/^t_list	*ft_lstnew(void const *content, size_t content_size)$/;"	f
ft_make_blocks_for_quotes	libft/ft_advance_for_quotes.c	/^char	*ft_make_blocks_for_quotes(char *str, int *i)$/;"	f
ft_memalloc	libft/ft_memalloc.c	/^void	*ft_memalloc(size_t size)$/;"	f
ft_memccpy	libft/ft_memccpy.c	/^void	*ft_memccpy(void *dest, const void *src, int c, size_t n)$/;"	f
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/;"	f
ft_memcmp	libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size_t n)$/;"	f
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *dest, const void *src, size_t n)$/;"	f
ft_memdel	libft/ft_memdel.c	/^void	ft_memdel(void **ap)$/;"	f
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dest, const void *src, size_t n)$/;"	f
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *s, int c, size_t n)$/;"	f
ft_new_alias	srcs/ft_new_alias.c	/^void	ft_new_alias(char **new_values)$/;"	f
ft_new_environ_size	srcs/ft_set_env.c	/^int				ft_new_environ_size(char **args, char **environ_tocpy)$/;"	f
ft_parse	srcs/ft_echo.c	/^void	ft_parse(char **str)$/;"	f
ft_pathlen	srcs/ft_set_env.c	/^static size_t	ft_pathlen(char *str)$/;"	f	file:
ft_place_element_in_tern_tree	srcs/ft_store.c	/^static	void	ft_place_element_in_tern_tree(t_arg **first, t_arg *new)$/;"	f	file:
ft_print_after_break	srcs/ft_print_info.c	/^static void ft_print_after_break(t_arg *line_info, int arg_len)$/;"	f	file:
ft_print_corresponding_variable	srcs/ft_echo.c	/^void	ft_print_corresponding_variable(char *str)$/;"	f
ft_print_current_directory	srcs/ft_print_info.c	/^static void ft_print_current_directory(char *path, char *git)$/;"	f	file:
ft_printtables	libft/ft_printtables.c	/^void	ft_printtables(char **str)$/;"	f
ft_put_alias_errors	srcs/ft_print_errors.c	/^int		ft_put_alias_errors(char **str)$/;"	f
ft_put_command_errors	srcs/ft_print_errors.c	/^void	ft_put_command_errors(char *str)$/;"	f
ft_put_env	srcs/ft_put_env.c	/^void	ft_put_env(void)$/;"	f
ft_putabs	libft/ft_putabs.c	/^void	ft_putabs(char **str, char separator)$/;"	f
ft_putchar	libft/ft_putchar.c	/^void	ft_putchar(char c)$/;"	f
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/;"	f
ft_putendl	libft/ft_putendl.c	/^void	ft_putendl(char const *s)$/;"	f
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char const *s, int fd)$/;"	f
ft_putnbr	libft/ft_putnbr.c	/^void	ft_putnbr(int n)$/;"	f
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/;"	f
ft_putstr	libft/ft_putstr.c	/^void	ft_putstr(char *str)$/;"	f
ft_putstr_fd	libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char const *s, int fd)$/;"	f
ft_putwhites	libft/ft_putwhites.c	/^void	ft_putwhites(int i)$/;"	f
ft_recognize_builtin_command	srcs/builtin_commands.c	/^int		ft_recognize_builtin_command(char *str)$/;"	f
ft_recognize_processes	main.c	/^void	ft_recognize_processes(char *str)$/;"	f
ft_recognize_processes	srcs/main.c	/^void	ft_recognize_processes(char *str)$/;"	f
ft_replace_content	srcs/ft_print_info.c	/^void	ft_replace_content(t_arg *line_info)$/;"	f
ft_retreat_lst_to	srcs/ft_lst_operations.c	/^void	ft_retreat_lst_to(t_arg **to_find)$/;"	f
ft_return_alias_errors	srcs/ft_print_errors.c	/^static int 	ft_return_alias_errors(int i, int underscore_nbr)$/;"	f	file:
ft_setenv	srcs/ft_set_env.c	/^char			**ft_setenv(char **args, int new_environ_size,$/;"	f
ft_sort_git_name	srcs/ft_location_info.c	/^char			*ft_sort_git_name(DIR *dir, char *buf)$/;"	f
ft_sort_setenv	srcs/ft_set_env.c	/^void			ft_sort_setenv(char **args)$/;"	f
ft_split_char	libft/ft_split_char.c	/^char			**ft_split_char(char *str, char c)$/;"	f
ft_split_whitespaces	libft/ft_split_whitespaces.c	/^char			**ft_split_whitespaces(char *str)$/;"	f
ft_split_whitespaces_nokots	libft/ft_split_whitespaces_nokots.c	/^char			**ft_split_whitespaces_nokots(char *str)$/;"	f
ft_standby	srcs/ft_complete_command.c	/^void	ft_standby(void)$/;"	f
ft_store_args	srcs/ft_store.c	/^t_arg			*ft_store_args(t_arg *first, t_arg *new_arg)$/;"	f
ft_store_command_historic	srcs/ft_store.c	/^static	t_arg	*ft_store_command_historic(t_arg *first)$/;"	f	file:
ft_str_alloccpy	libft/ft_strsplit.c	/^static char	*ft_str_alloccpy(char const *src, size_t size)$/;"	f	file:
ft_str_isalpha	libft/ft_str_isalpha.c	/^int	ft_str_isalpha(char *str)$/;"	f
ft_str_join_free	libft/get_next_line.c	/^char	*ft_str_join_free(char **s1, char **s2)$/;"	f
ft_strcat	libft/ft_strcat.c	/^char	*ft_strcat(char *dest, char *src)$/;"	f
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/;"	f
ft_strclr	libft/ft_strclr.c	/^void	ft_strclr(char *s)$/;"	f
ft_strcmp	libft/ft_strcmp.c	/^int		ft_strcmp(const char *s1, const char *s2)$/;"	f
ft_strcpy	libft/ft_strcpy.c	/^char	*ft_strcpy(char *dest, char *src)$/;"	f
ft_strdel	libft/ft_strdel.c	/^void	ft_strdel(char **as)$/;"	f
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *src)$/;"	f
ft_strdup_to_quote	libft/ft_advance_for_quotes.c	/^char	*ft_strdup_to_quote(char *src, char *dst)$/;"	f
ft_strdupfrom_free	libft/ft_strdup_free.c	/^char	*ft_strdupfrom_free(char *str, int i)$/;"	f
ft_strdupfrom_free	libft/ft_strdupfrom_free.c	/^char	*ft_strdupfrom_free(const char **src, int from)$/;"	f
ft_strequ	libft/ft_strequ.c	/^int	ft_strequ(char const *s1, char const *s2)$/;"	f
ft_striter	libft/ft_striter.c	/^void	ft_striter(char *s, void (*f)(char *))$/;"	f
ft_striteri	libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, char *))$/;"	f
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/;"	f
ft_strjoinfree	libft/ft_strjoinfree.c	/^char	*ft_strjoinfree(char **s1, char **s2, char a)$/;"	f
ft_strjoinfree_char_str	libft/ft_strjoinfree_char_str.c	/^char	*ft_strjoinfree_char_str(char s2, char **s1)$/;"	f
ft_strjoinfree_str_char	libft/ft_strjoinfree_str_char.c	/^char	*ft_strjoinfree_str_char(char **s1, char s2)$/;"	f
ft_strlcat	libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size_t size)$/;"	f
ft_strlen	libft/ft_strlen.c	/^size_t	ft_strlen(char *s)$/;"	f
ft_strmap	libft/ft_strmap.c	/^char	*ft_strmap(char const *s, char (*f)(char))$/;"	f
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned int, char))$/;"	f
ft_strncat	libft/ft_strncat.c	/^char	*ft_strncat(char *dest, char *src, int nb)$/;"	f
ft_strncmp	libft/ft_strncmp.c	/^int		ft_strncmp(const char *s1, const char *s2, size_t n)$/;"	f
ft_strncpy	libft/ft_strncpy.c	/^char	*ft_strncpy(char *dst, const char *src, size_t n)$/;"	f
ft_strnequ	libft/ft_strnequ.c	/^int	ft_strnequ(char const *s1, char const *s2, size_t n)$/;"	f
ft_strnew	libft/ft_strnew.c	/^char	*ft_strnew(size_t size)$/;"	f
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char *needle, size_t n)$/;"	f
ft_strrchr	libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/;"	f
ft_strsplit	libft/ft_strsplit.c	/^char		**ft_strsplit(char const *s, char c)$/;"	f
ft_strstr	libft/ft_strstr.c	/^char	*ft_strstr(const char *haystack, const char *needle)$/;"	f
ft_strsub	libft/ft_strsub.c	/^char	*ft_strsub(char const *s, unsigned int start, size_t len)$/;"	f
ft_strtrim	libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s)$/;"	f
ft_tabdel	libft/ft_tabdel.c	/^void	ft_tabdel(char **str)$/;"	f
ft_tabdup	libft/ft_tabdup.c	/^char	**ft_tabdup(char **str, int size)$/;"	f
ft_tabdup_and_add	libft/ft_tabdup_and_add.c	/^char	**ft_tabdup_and_add(char **tab, char *str, int size)$/;"	f
ft_tabsize	libft/ft_tabsize.c	/^int	ft_tabsize(char **tab)$/;"	f
ft_tolower	libft/ft_tolower.c	/^int		ft_tolower(int c)$/;"	f
ft_toupper	libft/ft_toupper.c	/^int		ft_toupper(int c)$/;"	f
ft_unsetenv	srcs/ft_unsetenv.c	/^void			ft_unsetenv(char **str)$/;"	f
g_commands	srcs/builtin_commands.c	/^static char *g_commands[9] = {"echo", "cd", "setenv", "unsetenv", "env",$/;"	v	file:
g_print_size	srcs/ft_location_info.c	/^static int g_print_size;$/;"	v	file:
g_to_find	srcs/ft_check_input_for_ctrl_keys.c	/^static	t_arg	*g_to_find = NULL;$/;"	v	file:
get_last_part	srcs/ft_location_info.c	/^static	char	*get_last_part(char *tmp)$/;"	f	file:
get_next_line	libft/get_next_line.c	/^int		get_next_line(const int fd, char **line, char tofind)$/;"	f
line_right	includes/minishell.h	/^	char			*line_right;$/;"	m	struct:s_arg
main	main.c	/^int	main()$/;"	f
main	srcs/main.c	/^int		main(void)$/;"	f
manage_stock	libft/get_next_line.c	/^t_gnl	*manage_stock(t_gnl **stock, int fd)$/;"	f
new_arg	srcs/ft_lst_operations.c	/^t_arg	*new_arg(void)$/;"	f
next	includes/minishell.h	/^	struct 	s_arg	*next;$/;"	m	struct:s_arg	typeref:struct:s_arg::s_arg
next	libft/include/get_next_line.h	/^	struct s_gnl	*next;$/;"	m	struct:s_gnl	typeref:struct:s_gnl::s_gnl
next	libft/include/libft.h	/^	struct s_list	*next;$/;"	m	struct:s_list	typeref:struct:s_list::s_list
old_line	includes/minishell.h	/^	char			*old_line;$/;"	m	struct:s_arg
previous	includes/minishell.h	/^	struct	s_arg	*previous;$/;"	m	struct:s_arg	typeref:struct:s_arg::s_arg
rest	libft/include/get_next_line.h	/^	char			*rest;$/;"	m	struct:s_gnl
s_arg	includes/minishell.h	/^typedef struct 		s_arg$/;"	s
s_gnl	libft/include/get_next_line.h	/^typedef	struct		s_gnl$/;"	s
s_list	libft/include/libft.h	/^typedef	struct		s_list$/;"	s
set_non_canonical_input	srcs/ft_read_input.c	/^static int	set_non_canonical_input(void)$/;"	f	file:
t_arg	includes/minishell.h	/^}					t_arg;$/;"	t	typeref:struct:s_arg
t_gnl	libft/include/get_next_line.h	/^}					t_gnl;$/;"	t	typeref:struct:s_gnl
t_list	libft/include/libft.h	/^}					t_list;$/;"	t	typeref:struct:s_list
